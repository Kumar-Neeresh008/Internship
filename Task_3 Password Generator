# Import necessary libraries
import random     # For generating random choices
import string     # For  character sets (characters, digits, special characters)

# Function to generate a password based on user preferences
def generate_password(length, use_upper=True, use_digits=True, use_special=True):
    # Define character sets
    lowercase = string.ascii_lowercase                      # a-z
    uppercase = string.ascii_uppercase if use_upper else ''  # A-Z
    digits = string.digits if use_digits else ''              # 0-9
    special = string.punctuation if use_special else ''       # Special characters like !@#$*%...

    # Combine all selected character sets
    all_chars = lowercase + uppercase + digits + special

    # Check if at least one character set is selected
    if not all_chars:
        return "Error: No character set selected!"

    # Generate a password by randomly picking characters from the combined set
    password = ''.join(random.choice(all_chars) for _ in range(length))

    return password

# Main program execution starts here
print("=== Secure Password Generator ===")

try:
    # Ask the user to enter the desired password length
    length = int(input("Enter the desired password length: "))

    # Validate that the length is greater than 0
    if length <= 0:
        print("Password length must be greater than 0.")
    else:
        # Ask user for complexity preferences
        include_upper = input("Include uppercase letters? (yes/no): ").lower() == 'yes'
        include_digits = input("Include digits? (yes/no): ").lower() == 'yes'
        include_special = input("Include special characters? (yes/no): ").lower() == 'yes'

        # Generate the password using the userâ€™s choices
        password = generate_password(length, include_upper, include_digits, include_special)

        # Display the generated password
        print("\nGenerated Password:", password)

except ValueError:
    # Handle case where user enters non-integer for length
    print("Invalid input! Please enter a valid number for password length.")
